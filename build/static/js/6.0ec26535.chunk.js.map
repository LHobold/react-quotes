{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCmE/BC,EA/DG,SAAAL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACC,eAAC,WAAD,WACC,cAAC,IAAD,CACCC,KAAMF,EACNG,QAAS,SAAAC,GAAQ,MAChB,yEAIF,cAAC,EAAD,UACC,uBACCC,QAlBJ,WACCJ,GAAc,IAkBXV,UAAWC,IAAQc,KACnBC,SA/BJ,SAA2BC,GAC1BA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAoB9C,UAKEvB,EAAM2B,WACN,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACC,cAACC,EAAA,EAAD,MAIF,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACC,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAErC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACC,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEnC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACC,wBAAQC,QAjCb,WACC1B,GAAc,IAgCgCV,UAAU,MAApD,kC,gBCpCSqC,UAlBE,WAChB,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACM,cAAXH,GACHC,EAAQG,KAAK,aAEZ,CAACJ,EAAQC,IAMZ,OACC,cAAC,EAAD,CAAWhB,UAAsB,YAAXe,EAAsBlB,WALrB,SAAAuB,GACvBN,EAAYM","file":"static/js/6.0ec26535.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3W38c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__N-MLq\",\"loading\":\"QuoteForm_loading__3ZZzI\",\"control\":\"QuoteForm_control__bKKd4\",\"actions\":\"QuoteForm_actions__3QnhM\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = props => {\n\tconst authorInputRef = useRef();\n\tconst textInputRef = useRef();\n\tconst [isEntering, setIsEntering] = useState(false);\n\n\tfunction submitFormHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst enteredAuthor = authorInputRef.current.value;\n\t\tconst enteredText = textInputRef.current.value;\n\n\t\t// optional: Could validate here\n\n\t\tprops.onAddQuote({ author: enteredAuthor, text: enteredText });\n\t}\n\n\tfunction formFocusedHandler() {\n\t\tsetIsEntering(true);\n\t}\n\n\tfunction finishedEnteringHandler() {\n\t\tsetIsEntering(false);\n\t}\n\treturn (\n\t\t<Fragment>\n\t\t\t<Prompt\n\t\t\t\twhen={isEntering}\n\t\t\t\tmessage={location =>\n\t\t\t\t\t'Are you sure you want to leave? All your entered data will be lost!'\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<Card>\n\t\t\t\t<form\n\t\t\t\t\tonFocus={formFocusedHandler}\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\tonSubmit={submitFormHandler}\n\t\t\t\t>\n\t\t\t\t\t{props.isLoading && (\n\t\t\t\t\t\t<div className={classes.loading}>\n\t\t\t\t\t\t\t<LoadingSpinner />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor=\"author\">Author</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"author\" ref={authorInputRef} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t\t<label htmlFor=\"text\">Text</label>\n\t\t\t\t\t\t<textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t\t<button onClick={finishedEnteringHandler} className=\"btn\">\n\t\t\t\t\t\t\tAdd Quote\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteForm;\n","import QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\nimport { useEffect } from 'react';\r\n\r\nconst NewQuote = () => {\r\n\tconst { sendRequest, status } = useHttp(addQuote);\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status === 'completed') {\r\n\t\t\thistory.push('/quotes');\r\n\t\t}\r\n\t}, [status, history]);\r\n\r\n\tconst addQuoteHandler = quoteData => {\r\n\t\tsendRequest(quoteData);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n\t);\r\n};\r\nexport default NewQuote;\r\n"],"sourceRoot":""}
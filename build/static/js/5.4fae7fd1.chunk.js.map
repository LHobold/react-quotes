{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","js/sorting.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","sortQuotes","quotes","ascending","sort","quoteA","quoteB","QuoteList","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCkBdC,EAhBG,SAAAC,GACjB,OACC,qBAAIC,UAAWC,IAAQC,KAAvB,UACC,mCACC,qCACC,4BAAIH,EAAMI,SAEX,qCAAaJ,EAAMK,YAEpB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCFYC,EAVI,SAACC,EAAQC,GAC3B,OAAOD,EAAOE,MAAK,SAACC,EAAQC,GAC3B,OAAIH,EACIE,EAAOL,GAAKM,EAAON,GAAK,GAAK,EAE7BK,EAAOL,GAAKM,EAAON,GAAK,GAAK,MCwCxBO,EAtCG,SAAAd,GACjB,IAAMe,EAAUC,cACVC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QASrCC,EAAef,EAAWR,EAAMS,OAAQU,GAE9C,OACC,eAAC,WAAD,WACC,qBAAKlB,UAAWC,IAAQsB,QAAxB,SACC,yBAAQC,QAZkB,WAC5BV,EAAQW,KAAK,CACZC,SAAUV,EAASU,SACnBN,OAAO,SAAD,OAAWF,EAAqB,OAAS,UAS9C,kBACOA,EAAqB,aAAe,iBAG5C,oBAAIlB,UAAWC,IAAQ0B,KAAvB,SACEL,EAAaM,KAAI,SAAAC,GAAK,OACtB,cAAC,EAAD,CAECvB,GAAIuB,EAAMvB,GACVF,OAAQyB,EAAMzB,OACdD,KAAM0B,EAAM1B,MAHP0B,EAAMvB,a,yCCpBFwB,EAXO,WACrB,OACC,sBAAK9B,UAAWC,IAAQ8B,SAAxB,UACC,iDACA,cAAC,IAAD,CAAM/B,UAAU,MAAMK,GAAG,aAAzB,6BC8BY2B,UA9BG,WACjB,MAKIC,YAAQC,KAAc,GAJzBC,EADD,EACCA,YACAC,EAFD,EAECA,OACMC,EAHP,EAGCC,KACAC,EAJD,EAICA,MAOD,OAJAC,qBAAU,WACTL,MACE,CAACA,IAEW,YAAXC,EAEF,qBAAKpC,UAAU,WAAf,SACC,cAACyC,EAAA,EAAD,MAKCF,EACI,mBAAGvC,UAAU,mBAAb,SAAiCuC,IAG1B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAItD,cAAC,EAAD,CAAWlC,OAAQ6B,IAHlB,cAAC,EAAD","file":"static/js/5.4fae7fd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1T-xT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__rkO3B\",\"sorting\":\"QuoteList_sorting__CLs2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1MoFT\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = props => {\n\treturn (\n\t\t<li className={classes.item}>\n\t\t\t<figure>\n\t\t\t\t<blockquote>\n\t\t\t\t\t<p>{props.text}</p>\n\t\t\t\t</blockquote>\n\t\t\t\t<figcaption>{props.author}</figcaption>\n\t\t\t</figure>\n\t\t\t<Link className=\"btn\" to={`/quotes/${props.id}`}>\n\t\t\t\tView Fullscreen\n\t\t\t</Link>\n\t\t</li>\n\t);\n};\n\nexport default QuoteItem;\n","const sortQuotes = (quotes, ascending) => {\r\n\treturn quotes.sort((quoteA, quoteB) => {\r\n\t\tif (ascending) {\r\n\t\t\treturn quoteA.id > quoteB.id ? 1 : -1;\r\n\t\t} else {\r\n\t\t\treturn quoteA.id < quoteB.id ? 1 : -1;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default sortQuotes;\r\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport sortQuotes from '../../js/sorting';\n\nconst QuoteList = props => {\n\tconst history = useHistory();\n\tconst location = useLocation();\n\n\tconst queryParams = new URLSearchParams(location.search);\n\n\tconst isSortingAscending = queryParams.get('sort') === 'asc';\n\n\tconst changeSortingHandler = () => {\n\t\thistory.push({\n\t\t\tpathname: location.pathname,\n\t\t\tsearch: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n\t\t});\n\t};\n\n\tconst sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className={classes.sorting}>\n\t\t\t\t<button onClick={changeSortingHandler}>\n\t\t\t\t\tSort {isSortingAscending ? 'Descending' : 'Ascending'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul className={classes.list}>\n\t\t\t\t{sortedQuotes.map(quote => (\n\t\t\t\t\t<QuoteItem\n\t\t\t\t\t\tkey={quote.id}\n\t\t\t\t\t\tid={quote.id}\n\t\t\t\t\t\tauthor={quote.author}\n\t\t\t\t\t\ttext={quote.text}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</Fragment>\n\t);\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n\treturn (\n\t\t<div className={classes.noquotes}>\n\t\t\t<p>No quotes found!</p>\n\t\t\t<Link className=\"btn\" to=\"/new-quote\">\n\t\t\t\tAdd a Quote\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nconst AllQuotes = () => {\r\n\tconst {\r\n\t\tsendRequest,\r\n\t\tstatus,\r\n\t\tdata: loadedQuotes,\r\n\t\terror,\r\n\t} = useHttp(getAllQuotes, true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest();\r\n\t}, [sendRequest]);\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className=\"centered\">\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (error) {\r\n\t\treturn <p className=\"centered focused\">{error}</p>;\r\n\t}\r\n\r\n\tif (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n\t\treturn <NoQuotesFound />;\r\n\t}\r\n\r\n\treturn <QuoteList quotes={loadedQuotes} />;\r\n};\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}